---
import { siteConfig } from "@/config/site";
import "@/styles/globals.css";
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
  description?: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const {
  title,
  description = siteConfig.description,
  image = "/og.png",
} = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="shortcut icon" sizes="16x16" href="/favicon.png">
<link rel="shortcut icon" sizes="32x32" href="/faviconx32.png">
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Font preloads -->
<link
  rel="preload"
  href="/fonts/calsans-semibold.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title ? `${title} - Afip SDK` : "Afip SDK"}</title>
<meta name="title" content={title ? `${title} - Afip SDK` : "Afip SDK"} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Dark mode with prevent flickering flash between navigations -->
<script is:inline>
const setDarkMode = () => {
  // const theme = (() => {
  //   if (
  //     typeof localStorage !== "undefined" &&
  //     localStorage.getItem("theme")
  //   ) {
  //     return localStorage.getItem("theme");
  //   }
  //   if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
  //     return "dark";
  //   }
  //   return "light";
  // })();
  const theme = 'dark';

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
};

setDarkMode();
document.addEventListener("astro:after-swap", setDarkMode);
</script>


<!-- Google tag (gtag.js) -->
<script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-GHNJM0PE77"></script>
<script type="text/partytown" >
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-GHNJM0PE77');
</script>

<ViewTransitions />
